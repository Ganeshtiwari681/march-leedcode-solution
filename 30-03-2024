class Solution {
public:
    int subarraysWithKDistinct(vector<int>& nums, int k) {
        return atMost(nums, k)-atMost(nums, k-1);
    }
    int atMost(vector<int>& nums, int k) {
        int l=0, r=0, res=0, n=nums.size();
        unordered_map<int, int> mp;
        while (r < n) {
            mp[nums[r]]++;
            while (mp.size() > k) {
                mp[nums[l]]--;
                if (mp[nums[l]] == 0) {
                    mp.erase(nums[l]);
                }
                l++;
            }
            res+=r-l+1;
            r++;
        }
        return res;
    }
};
